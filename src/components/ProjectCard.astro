---
import { Image } from '@astrojs/image/components'
import Github from './Github.astro'

export interface Props {
  techs: string[]
  image: ImageMetadata
  name: string
  desc: string
  url: string
  live?: string
}
const { techs, image, name, desc, url, live } = Astro.props

const githubToken = await import.meta.env.GITHUB_PERSONAL_TOKEN
const repoName = url.replace('https://github.com/wesngu28/', '')
const response = await fetch(
  `https://api.github.com/repos/wesngu28/${repoName}/languages`,
  {
    headers: {
      authorization: `token ${githubToken}`,
    },
  }
)

const languages = await response.json()
const langLines: Array<number> = Object.values(languages)
const lines = langLines.reduce((a, b) => a + b, 0)
Object.keys(languages).forEach(language => {
  languages[language] = 100 * (languages[language] / lines)
})
---

<li class="p-4 bg-[#21222a] m-4 inline-block">
  {
    live ? (
      <a class="m-auto" target="_blank" href={live} rel="noopener noreferrer">
        <Image
          alt={`${name} screenshot or related content if no screenshot makes sense`}
          src={image}
        />
      </a>
    ) : (
      <Image
        alt={`${name} screenshot or related content if no screenshot makes sense`}
        src={image}
      />
    )
  }
  <Github prefetch={languages} />
  <div class={`pr-2 pl-2`}>
    <ul class={'flex mt-1 justify-center flex-wrap'}>
      {
        techs.map((arr, i) => {
          return (
            <li class="m-2 p-1 bg-[beige] text-black rounded-lg">
              <p>{arr}</p>
            </li>
          )
        })
      }
    </ul>
    <a target="_blank" href={url} rel="noopener noreferrer">
      <h2 class="hover:underline m-2 text-center font-bold text-lg">
        {name}
      </h2>
    </a>
    <p>{desc}</p>
  </div>
</li>
