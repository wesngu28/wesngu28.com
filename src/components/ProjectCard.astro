---
import { Image } from '@astrojs/image/components'
import Github from './Github'

export interface Props {
  techs: string[]
  image: ImageMetadata
  name: string
  desc: string
  url: string
  live?: string
}
const { techs, image, name, desc, url, live } = Astro.props
const linguist = await fetch(
  `${import.meta.env.PUBLIC_URL}/api/github.json?repo=${url.replace(
    'https://github.com/wesngu28/',
    ''
  )}`
)
const linguini = await linguist.text()
const langs = await JSON.parse(linguini)
const counts: Array<number> = Object.values(langs)
const total = counts.reduce(
  (previousValue: number, currentValue) => previousValue + currentValue,
  0
)
Object.keys(langs).map(extension => {
  langs[extension] = (langs[extension] / total) * 100
})
---

<li class="p-4 bg-[#21222a] m-4 inline-block">
  {
    live ? (
      <a class="m-auto" target="_blank" href={live} rel="noopener noreferrer">
        <Image
          alt={`${name} screenshot or related content if no screenshot makes sense`}
          src={image}
        />
      </a>
    ) : (
      <Image
        alt={`${name} screenshot or related content if no screenshot makes sense`}
        src={image}
      />
    )
  }
  <Github url={url} prefetch={langs} client:idle />
  <div class={`pr-2 pl-2`}>
    <ul class={'flex mt-1 justify-center flex-wrap'}>
      {
        techs.map((arr, i) => {
          return (
            <li class="m-2 p-1 bg-[beige] text-black rounded-lg">
              <p>{arr}</p>
            </li>
          )
        })
      }
    </ul>
    <a target="_blank" href={url} rel="noopener noreferrer">
      <h2 class="hover:underline m-2 text-center font-bold text-lg">
        {name}
      </h2>
    </a>
    <p>{desc}</p>
  </div>
</li>
