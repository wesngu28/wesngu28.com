---
import { MoveLeft } from 'lucide-astro'
import ContactLinks from './ContactLinks.astro'
import { Image } from 'astro:assets'
import Techbar from './Techbar.astro'
import langs from '../data/language-list.json'
import Github from './Github'

export interface Props {
  title?: string
  header: string
  text: string
  center?: boolean
  pubDate?: string
  repository?: string
  techs?: string[]
  imageData?: [string, any]
}

const { header, text, center, pubDate, repository, techs, imageData } = Astro.props

const returnHref = () => {
    if (pubDate) {
        return "/blog";
    }

    if (repository) {
        const homePage = ['Personal Website', 'RhodesAPI', 'PackageTracker', 'Holoboard', 'Picatso'];
        return homePage.includes(header) ? "/" : "/projects";
    }
};
---

<div class="pt-16">
  {
    (pubDate || repository) && (
      <a
        class="text-2xl underline hover:animate-pulse transform h-max w-max transition duration-500 hover:scale-105"
        href={returnHref()}
      >
        <MoveLeft class="size-8 m-auto" />
      </a>
    )
  }
  <h1 class="text-6xl font-bold m-4 mb-8 text-center">
    {header}
  </h1>
  {
    imageData && (
      <Image
        alt={imageData[0]}
        format={'webp'}
        loading={'eager'}
        class="max-w-lg p-4 mx-auto"
        src={imageData[1].default}
      />
    )
  }
  <p class={`m-auto text-xl leading-8 max-w-3xl ${center ? 'text-center' : 'text-left'}`}>
    {text}
  </p>
  {
    pubDate && (
      <p class="text-lg text-center m-2">
        <time>
          {' '}
          {new Date(pubDate).toLocaleDateString('en-us', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          })}
        </time>
      </p>
    )
  }
  <div class="max-w-md flex flex-col mx-auto mt-4">
    {
      repository && (
        <>
          <a
            target="_blank"
            href={repository}
            rel="noopener noreferrer"
            class="md:text-sm gap-2 hover:underline mx-auto flex items-center"
          >
            <svg class="invert size-4" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"
              ><title>GitHub</title><path
                d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
              ></path></svg
            >
            Repo
          </a>
          <Github langs={langs} url={repository} client:idle />
          {techs && <Techbar techs={techs} margin="auto" />}
        </>
      )
    }
  </div>
  <ContactLinks />
</div>
