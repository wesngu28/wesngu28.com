---
import Base from '../layouts/Base.astro'
import hackathonProjects from '../data/hackathon-projects.json'
import otherProjects from '../data/other-projects.json'
import schoolProjects from '../data/school-projects.json'

import ProjectCard from '../components/ProjectCard.astro'
import Blurb from '../components/Blurb.astro'
---

<!-- At some point these can just be markdown posts -->
<Base title="Projects" map={false}>
  <Blurb
    header={'Other Projects'}
    text="I've made many projects in an effort to expand my skills and learn. Here are the ones that did not get shown on the home page."
    slot={'about'}
  />
  <h2 class="mt-16 font-semibold tracking-tighter text-3xl">Hackathons</h2>
  <p class="mt-4">I made these projects as a part of various hackathons.</p>
  <div class="mt-5 grid grid-cols-1 md:grid-cols-2 place-items-center max-w-[910px]">
    {
      hackathonProjects.map(async project => {
        return (
          <ProjectCard
            techs={project.techs}
            title={project.title}
            description={project.description}
            repository={project.repository}
            live={project.live}
            image={project.image}
            orientation={project.orientation}
          />
        )
      })
    }
  </div>
  <h2 class="mt-16 font-semibold tracking-tighter text-3xl">Personal Projects</h2>
  <p class="mt-4">Various personal projects I made for fun and learning.</p>
  <p>(not in chronological order)</p>
  <div class="mt-5 grid grid-cols-1 md:grid-cols-2 place-items-center max-w-[910px]">
    {
      otherProjects.map(async project => {
        return (
          <ProjectCard
            techs={project.techs}
            title={project.title}
            description={project.description}
            repository={project.repository}
            md={project.md}
            live={project.live}
            image={project.image}
          />
        )
      })
    }
  </div>
  <!-- <h2 class="mt-16 font-semibold tracking-tighter text-3xl">In-Progress or On-Hold</h2>
  <p class="mt-4">Projects that are incomplete and I am working on or on-hold.</p>
  <div
    class="grid grid-cols-1 md:gap-16 md:grid-cols-2 xl:grid-cols-3 place-items-center"
  >
    <ProjectCard
      techs={['TypeScript', 'React', 'Redux', 'Next.js', 'Supabase', 'Stripe']}
      url={'https://github.com/matthewmercer/septim-shop'}
      image={thawip}
      name={'Imperial Housing Agency'}
      desc={'An on-hold e-commerce website, for the citizens of Tamriel to purchase homes throughout Cyrodiil and Skyrim. I want to get the best screenshots possible.'}
    />
    <ProjectCard
      techs={['Python', 'Django', 'MySQL']}
      url={'https://github.com/matthewmercer/sapdb'}
      image={sap}
      name={'Super Auto Pets DB'}
      desc={'An on-hold API and frontend for the game Super Auto Pets. I plan to restart development on this using Drizzle and a JS framework.'}
    />
  </div> -->
  <h2 class="mt-16 font-semibold tracking-tighter text-3xl">School Projects</h2>
  <p class="mt-4">Projects I made with groups during my time at UW.</p>
  <div class="mt-5 grid grid-cols-1 md:grid-cols-2 place-items-center max-w-[910px] mb-20">
    {
      schoolProjects.map(async project => {
        return (
          <ProjectCard
            techs={project.techs}
            title={project.title}
            description={project.description}
            repository={project.repository}
            md={project.md}
            live={project.live}
            image={project.image}
          />
        )
      })
    }
  </div>
</Base>

<script>
  function observer() {
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show')
        } else {
          entry.target.classList.remove('show')
        }
      })
    })
    const posts = document.querySelectorAll('.clienthide')
    posts.forEach(post => observer.observe(post))
  }
  observer()
  document.addEventListener('astro:after-swap', observer)
</script>
